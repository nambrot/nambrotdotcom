# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
image: docker:1.13-dind
services:
  - docker:1.13-dind

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby
    - public/assets

# This is a basic example for a gem or script which doesn't use
# services such as redis or postgres
before_script:
  - docker info
  - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" registry.gitlab.com

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/nambrot/nambrotdotcom:$CI_COMMIT_SHA
  CONTAINER_BASE_IMAGE: registry.gitlab.com/nambrot/nambrotdotcom:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/nambrot/nambrotdotcom:prod-$CI_COMMIT_SHA
  DOCKER_HOST: tcp://docker:2375
# Optional - Delete if not using `rubocop`
rails:
  image: gitlab/dind
  stage: test
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - docker run $CONTAINER_TEST_IMAGE bundle exec rake test

release-image:
  image: google/cloud-sdk
  stage: deploy
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_BASE_IMAGE
    - docker push $CONTAINER_BASE_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy_to_gke:
  image: google/cloud-sdk
  stage: deploy
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone us-central1-f
    - gcloud config set project nambrotdotcom
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials nambrotdotcom
    - kubectl rolling-update web-deployment --image=$CONTAINER_RELEASE_IMAGE
  only:
    - master
  when: manual

image-test:
  stage: build
  script:
  - docker pull $CONTAINER_BASE_IMAGE
  - docker build --pull  --cache-from $CONTAINER_RELEASE_IMAGE -t $CONTAINER_TEST_IMAGE .
  - docker push $CONTAINER_TEST_IMAGE
