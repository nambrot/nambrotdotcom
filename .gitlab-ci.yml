# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
image: docker:1.13-dind

# Cache gems in between builds
cache:
  paths:
    - vendor/ruby
    - myapp/public/assets

variables:
  CONTAINER_TEST_IMAGE: registry.gitlab.com/nambrot/nambrotdotcom:$CI_COMMIT_SHA
  CONTAINER_BASE_IMAGE: registry.gitlab.com/nambrot/nambrotdotcom:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: registry.gitlab.com/nambrot/nambrotdotcom:prod-$CI_COMMIT_SHA
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay

# Optional - Delete if not using `rubocop`
rails:
  stage: test
  services:
  - docker:1.13-dind
  script:
  - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" registry.gitlab.com
  - docker pull $CONTAINER_TEST_IMAGE || true
  - docker run $CONTAINER_TEST_IMAGE bundle exec rake test

release-image:
  stage: deploy
  services:
  - docker:1.13-dind
  script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" registry.gitlab.com
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_BASE_IMAGE
    - docker push $CONTAINER_BASE_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

deploy_to_gke:
  image: google/cloud-sdk
  stage: deploy
  script:
    - echo "$GOOGLE_SERVICE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone us-central1-f
    - gcloud config set project nambrotdotcom
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials nambrotdotcom
    - kubectl set image deployment/web-deployment web=$CONTAINER_RELEASE_IMAGE
  only:
    - master
  when: manual

deploy_review:
  image: devth/helm
  stage: deploy
  script:
    - echo "$GOOGLE_SERVICE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone us-central1-f
    - gcloud config set project nambrotdotcom
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials nambrotdotcom
    - kubectl create namespace $CI_COMMIT_REF_NAME
    - >
      kubectl create secret docker-registry registry.gitlab.com
      --docker-server=https://registry.gitlab.com --docker-username=namsgitlabbot
      --docker-password=$GITLAB_BOT_USER_PASSWORD --docker-email=nambrot+gitlabbot@gmail.com
      --namespace=fix-issue-12
    - >
      helm install kube-config/charts/review-app-chart
      --set namespace.name=$CI_COMMIT_REF_NAME,slugName=$GITLAB_BOT_USER_PASSWORD,image=$CONTAINER_RELEASE_IMAGE
    - kubectl set image deployment/nambrotdotcom nambrotdotcom-web=$CONTAINER_RELEASE_IMAGE --namespace=$CI_COMMIT_REF_NAME
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.nambrot.com
    on_stop: stop_review
  only:
    - branches
  except:
    - master

stop_review:
  image: devth/helm-docker
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "$GOOGLE_SERVICE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone us-central1-f
    - gcloud config set project nambrotdotcom
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials nambrotdotcom
    - kubectl delete namespace $CI_COMMIT_REF_NAME
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - branches
  except:
    - master

image-test:
  stage: build
  services:
  - docker:1.13-dind
  script:
  - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" registry.gitlab.com
  - docker pull $CONTAINER_BASE_IMAGE || true
  - docker build --pull  --cache-from $CONTAINER_BASE_IMAGE -t $CONTAINER_TEST_IMAGE .
  - docker push $CONTAINER_TEST_IMAGE
